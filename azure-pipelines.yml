trigger:
- main   # or your branch

pool:
  vmImage: 'ubuntu-latest'

variables:
- group: Snowflake-Config   # 👈 connects to your ADO variable group

steps:
- checkout: self

- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'

- script: |
    echo "Installing dependencies..."
    pip install snowflake-connector-python pandas
  displayName: 'Setup Python Environment'

# Step 3: Run your automation script (replacements)
- script: |
    echo "Running local SQL replacement automation..."
    python apply_sql_changes.py
  displayName: 'Apply local SQL replacements'

# Step 4: Execute the SQL scripts in Snowflake
- script: |
    echo "Connecting to Snowflake and executing SQL scripts..."
    python - <<EOF
    import os
    import snowflake.connector

    conn = snowflake.connector.connect(
        user='$(SNOWFLAKE_USER)',
        password='$(SNOWFLAKE_PASSWORD)',
        account='$(SNOWFLAKE_ACCOUNT)',
        role='$(SNOWFLAKE_ROLE)',
        database='$(SNOWFLAKE_DATABASE)',
        schema='$(SNOWFLAKE_SCHEMA)'
    )
    cursor = conn.cursor()

    for root, _, files in os.walk('SCRIPTS'):
        for file in files:
            if file.endswith('.sql'):
                path = os.path.join(root, file)
                print(f"Executing: {path}")
                with open(path, 'r') as f:
                    sql_script = f.read()
                try:
                    cursor.execute(sql_script)
                    print("✅ Executed successfully")
                except Exception as e:
                    print(f"❌ Error executing {file}: {e}")

    cursor.close()
    conn.close()
    EOF
  displayName: 'Execute SQL in Snowflake'
